---
- name: Check unpartitioned space
  ansible.builtin.shell: |
    set -o pipefail
    /sbin/parted /dev/mmcblk0 unit gb print free | grep 'Free Space' | tail -n1 | awk '{print $3}'
  register: unpartitioned
  changed_when: false
  failed_when: unpartitioned.stderr
  args:
    executable: /usr/bin/bash

- name: Expand filesystem to fill disk
  ansible.builtin.command: raspi-config --expand-rootfs
  when: unpartitioned.stdout != "0.00GB"

- name: Reboot after file system change
  ansible.builtin.reboot:
    reboot_timeout: 300
  when: unpartitioned.stdout != "0.00GB"

- name: Get current locale and layout configuration
  ansible.builtin.command: localectl status
  register: locale_status
  changed_when: false

- name: Parse 'LANG' from current locale and language configuration
  ansible.builtin.set_fact:
    current_locale: "{{ locale_status.stdout | regex_search('LANG=([^\n]+)', '\\1') | first }}"

- name: Parse 'Layout' from X11 Layout
  ansible.builtin.set_fact:
    current_layout: "{{ locale_status.stdout | regex_search('X11 Layout: ([^\n]+)', '\\1') | first }}"

- name: Set locale
  ansible.builtin.command: raspi-config nonint do_change_locale {{ rpi_locale }}
  when: current_locale != rpi_locale

- name: Set keyboard layout
  ansible.builtin.command: raspi-config nonint do_configure_keyboard {{ rpi_layout }}
  when: current_layout != rpi_layout

- name: Get current wifi country
  ansible.builtin.command: raspi-config nonint get_wifi_country
  register: current_wifi_country
  changed_when: false

- name: Set wifi country
  ansible.builtin.command: raspi-config nonint do_wifi_country {{ rpi_wifi_country }}
  when: current_wifi_country.stdout != rpi_wifi_country

- name: Set the hostname
  become: true
  ansible.builtin.command: hostnamectl set-hostname "{{ rpi_hostname }}"
  changed_when: false

- name: Update /etc/hosts with new hostname
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    regexp: ^127.0.1.1  raspberrypi$
    line: 127.0.1.1  {{ rpi_hostname }}
    state: present

- name: Configure swap file
  community.general.ini_file:
    path: /etc/dphys-swapfile
    section: ""
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    no_extra_spaces: true
    owner: root
    group: root
    mode: 0644
  loop: "{{ rpi_swap_config | dict2items }}"
  notify: setup swap file is required
